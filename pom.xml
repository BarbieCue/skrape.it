<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>it.skrape</groupId>
    <artifactId>skrapeit-core</artifactId>
    <version>0.6.0</version>

    <name>skrape{it}</name>
    <description>
        skrape{it} is a Kotlin-based HTML testing and web scraping library
        that can be used seamlessly in both Spring-Boot and other JVM projects.
        It places particular emphasis on ease of use, a high level of readability
        and attention to performance through the use of non-blocking operations.
    </description>
    <url>https://docs.skrape.it</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Christian Dr√§ger</name>
            <email>christian.draeger1@gmail.com</email>
            <url>https://github.com/christian-draeger</url>
            <timezone>Europe/Berlin</timezone>
            <properties>
                <twitter>@JvmDefault</twitter>
            </properties>
        </developer>
    </developers>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/skrapeit/skrape.it/issues</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git://github.com/skrapeit/skrape.it.git</connection>
        <developerConnection>scm:git:ssh://github.com:skrapeit/skrape.it.git</developerConnection>
        <url>https://github.com/skrapeit/skrape.it/tree/master</url>
    </scm>

    <packaging>jar</packaging>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
        <pluginRepository>
            <id>arturbosch-code-analysis</id>
            <name>arturbosch-code-analysis (for detekt)</name>
            <url>https://dl.bintray.com/arturbosch/code-analysis/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <kotlin.version>1.2.50</kotlin.version>
        <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <junit.version>5.5.2</junit.version>
        <version.jsoup>1.11.3</version.jsoup>
        <version.assertk>0.13</version.assertk>
        <version.htmlunit>2.35.0</version.htmlunit>
        <version.wiremock>2.23.2</version.wiremock>
        <version.testcontainers>1.11.2</version.testcontainers>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${version.jsoup}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.willowtreeapps.assertk</groupId>
            <artifactId>assertk-jvm</artifactId>
            <version>${version.assertk}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>${version.htmlunit}</version>
            <scope>compile</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.nhaarman.mockitokotlin2</groupId>
            <artifactId>mockito-kotlin</artifactId>
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${version.wiremock}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>1.7.26</version>
            <scope>test</scope>
        </dependency>


        <!-- fix transitive dependency convergence between wiremock and htmlunit -->
        <!-- wiremock depends on older jetty-io version (were org/eclipse/jetty/io/AbstractConnection#toString haven't been final) -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-io</artifactId>
            <version>9.2.26.v20180806</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- testing plugins -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- take good care of the version combination surefire<->junit -->
                <version>2.22.2</version>
                <configuration>
                    <failIfNoTests>true</failIfNoTests>
                    <!--<classesDirectory>${project.build.outputDirectory}</classesDirectory>-->
                </configuration>
            </plugin>

            <!-- release to maven central repository needs sources and docs -->
            <!-- https://stackoverflow.com/questions/40764064/maven-source-plugin-not-work-for-kotlin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                            <forceCreation>true</forceCreation>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- generate javadocs-->
            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>0.9.18</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>javadocJar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jdkVersion>8</jdkVersion>
                    <impliedPlatforms>
                        <platform>JVM</platform>
                    </impliedPlatforms>
                </configuration>
            </plugin>

            <!-- create coverage report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <!-- This can be run separately with mvn antrun:run@detekt -->
                        <id>detekt</id>
                        <phase>verify</phase>
                        <configuration>
                            <target name="detekt">
                                <java taskname="detekt" dir="${basedir}"
                                      fork="true"
                                      failonerror="true"
                                      classname="io.gitlab.arturbosch.detekt.cli.Main"
                                      classpathref="maven.plugin.classpath">
                                    <arg value="--input"/>
                                    <arg value="${basedir}/src/main/kotlin"/>
                                    <arg value="--filters"/>
                                    <arg value=".*/target/.*,.*/resources/.*"/>
                                    <arg value="--report"/>
                                    <arg value="xml:${basedir}/target/report/detekt.xml"/>
                                    <arg value="--baseline"/>
                                    <arg value="${basedir}/reports/baseline.xml"/>
                                    <arg value="--config"/>
                                    <arg value="${project.basedir}/src/test/resources/detekt.yml"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.gitlab.arturbosch.detekt</groupId>
                        <artifactId>detekt-cli</artifactId>
                        <version>1.0.0.RC9.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <rules>
                        <dependencyConvergence/>
                    </rules>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
